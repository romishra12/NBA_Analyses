devtools::install_github("abresler/nbastatR")
install.packages("devtools")
devtools::install_github("abresler/nbastatR")
devtools::install_github("abresler/nbastatR")
install.packages("Rtools")
devtools::install_github("abresler/nbastatR")
devtools::install_github("abresler/nbastatR",force=TRUE)
library(tidyverse)
library(nbastatR)
warnings()
?nbastatR
agents_players(agents = c("Jeff Schwartz"))
x <- bref_awards_votes(seasons=2022)
View(x)
class(x)
View(x[[2]][[1]])
x <- bref_awards_votes(seasons=2018:2022)
View(dataMVPVotes)
?tbl_df
# Create two tibbles
df1 <- tibble(id = c(1, 2), value = c("A", "B"))
df2 <- tibble(id = c(3, 4), value = c("C", "D"))
View(df1)
View(df2)
# Create a nested tibble
df_nested <- tibble(
group = c("X", "Y"),
data = list(df1, df2)
)
View(df_nested)
bref_awards_votes
View(dataMVPVotes)
View(x)
View(x[[2]][[4]])
View(dataMVPVotes)
x <- bref_awards_votes(seasons=2000:2024)
View(dataMVPVotes)
write.csv(dataMVPVotes, "./DATA/MVPWinners_2000-2024.csv")
write.csv(dataMVPVotes, "./DATA/MVPWinners_2000-2024.csv")
library(tidyverse)
library(nbastatR)
warnings()
View(x)
class(x)
class(x$dataTable)
class(x$dataTable[4])
x$dataTable[4]
x$dataTable[4][[1]]
x$dataTable[4][[1]] |> class()
write.csv(dataMIPVotes, "./DATA/MIPWinners_2000-2024.csv")
library(tidyverse)
library(nbastatR)
?nbastatR
play_by_play(game_ids = c(21700002, 21700003), nest_data = F, return_message = T)
games <- play_by_play(game_ids = c(21700002, 21700003), nest_data = F, return_message = T)
View(games)
game_logs <- game_logs(seasons = 2019, result_types = c("team", "player"))
Sys.setenv("VROOM_CONNECTION_SIZE")
Sys.setenv(131072)
install.packages("hoopR")
library(hoopR)
?hoopR
most_recent_nba_season()
library(hoopR)
rm(list=ls())
library(tidyverse)
library(hoopR)
pbp <- load_nba_pbp(seasons = 2024)
View(pbp)
colnames(pbp)
length(unique(pbp$game_id))
30*82
length(unique(pbp$season_type))
unique(pbp$season_type)
range(pbp$game_date)
30*82
length(unique(pbp$game_id))
1314-1230
pbp_list <- split(pbp,f=pbp$game_id)
?nbastatR
game_logs <- game_logs(seasons = 2024)
library(tidyverse)
test <- hoops_hype_salary_summary(return_wide = T,return_message = T)
View(test)
pbp2 <- play_by_play_v2(21700002)
View(pbp2)
library(rvest)
?`rvest-package`
library(rvest)
# URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/Forbes_list_of_the_most_valuable_NBA_teams"
# Read the HTML content of the page
webpage <- read_html(url)
View(webpage)
xml_attrs(webpage)
# Extract the table with the class "wikitable"
table <- webpage %>%
html_nodes("table.wikitable") %>%
html_table(fill = TRUE)
View(table)
table[[1]]
# The table is stored as a list of data frames, so access the first element
nba_valuations <- table[[1]]
# View the extracted table
print(nba_valuations)
?html_nodes
# Extract the table with the class "wikitable"
table <- webpage %>%
html_element("table.wikitable") %>%
html_table(fill = TRUE)
table <- webpage %>%
html_element("table.wikitable")
View(table)
table$node
